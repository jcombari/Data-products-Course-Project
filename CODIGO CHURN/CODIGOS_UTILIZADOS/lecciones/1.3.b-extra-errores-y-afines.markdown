(1.3.b) Extra: Errores y afines
===============================

(adaptado de la página de [Patric Burns](http://www.burns-stat.com/))

En algún momento, probablemente muy pronto, usted va a obtener un error en R. No se estrese: el universo no va a colapsar debido a un error en R. Es más, obtener errores le ayuda a desarrollar el caracter. R produce errores y advertencias (“warnings” en inglés). Ambos se despliegan como mensajes, con la diferencia de que los errores detienen la ejecución del comando, mientras que las advertencias no (aunque existe a excepción: el comando [`try`](http://www.inside-r.org/r-doc/base/try)).

Podemos categorizar los errores de R en tres tipos:
1. errores de sintaxis,
2. errores de objetos no encontrados y
3. el resto.

Errores de sintaxis
-------------------

Se dice que hay un error de sintaxis, si el usuario ingresó un comando que R no puede interpretar. Generalmente el mensaje indica el punto aproximado en el comando donde se encuentra dicho error. Al principio puede parecer un poco extraña la forma del mensaje, pero con un poco de práctica uno se puede volver muy bueno entendiéndolos.

Veamos por ejemplo el siguiente comando erróneo y el mensaje resultante:

```r
> plot(sort(rnorm(100)), pch=19 col='orange')
Error: unexpected symbol in "plot(sort(rnorm(100)), pch=19 col"
```

Como puede verse, la falta de una coma (aquí: `pch=19, col=`) genera este mensaje. La forma en que R nos lo informa es diciendo que hay un "símbolo inesperado", en este caso, la palabra `col`. Aquí lo que ocurrió es que R no pudo seguir interpretando el comando en el momento en que apareció `col`, ya que las opciones posibles eran otras (un paréntesis cerrando, una coma). Entonces cada vez que nos falta una coma (o un paréntesis, llave o corchete) va a dar un mensaje de este estilo y hacemos bien en recordarlo.

Objeto no encontrado
--------------------

Los errores de "objetos no encontrados" pueden tener una de varias causas:

1. el nombre no se escribió correctamente (p.ej.: mayúsculas / minúsculas)
2. el paquete o archivo que contiene el objeto no ha sido cargado
3. olvidó poner comillas en un lugar que corresponde (R piensa: si no tiene comillas, entonces es un objeto definido en esta sesión)
4. algún otro motivo (sea imaginativo)

Ejemplo (caso 3):

```r
> plot(sort(rnorm(100)), pch=19, col=orange)
Error in plot.xy(xy, type, ...) : object 'orange' not found
```

Otros errores
-------------

Hay otras innumerables formas de cometer errores. Entonces, a veces es necesario hacer trabajos detectivescos para ver dónde están; piénselo como un desafío que necesita resolverse, no se frustre. Nos parece que debería ser una práctica extendida escribir en la consola:

```r
> traceback()
```

cada vez que se obtiene un error.

Los resultados pueden no significar mucho para usted en este momento, pero lo van a hacer en algún momento. Traceback indica qué funciones se estaban ejecutando en el momento del error, dando una pista acerca de qué está mal. Por ejemplo, siguiendo con el caso anterior:

```r
> traceback()
3: plot.xy(xy, type, ...)
2: plot.default(sort(rnorm(100)), pch = 19, col = orange)
1: plot(sort(rnorm(100)), pch = 19, col = orange)
```

El nombre de las funciones mencionadas aquí es anecdótico (`plot`, `plot.default`, `plot.xy`), pero es bueno saber cómo interpretarlo: en el momento de ocurrencia del error la función 3 (`plot.xy`) estaba corriendo y había sido llamada a su vez por la función 2 (`plot.default`), la que a su vez fue llamada por nuestro comando original (la función 1, `plot`).

Advertencias (Warnings)
-----------------------

Una advertencia no es algo tan serio, como un error, o al menos no lo parece, ya que esta permite  que el comando sigua corriendo hasta completarse. Pero puede ocurrir que ignorar una advertencia llegue a ser algo muy serio, si esto implica que la salida del comando es errónea.

Por lo tanto, es una buena política entender los mensajes de advertencia para ver si indican problemas reales o no.

### Algo más sobre errores en R

Cuando obtenga un error en R que no entiende, seguramente es porque está haciendo alguna suposición que no es cierta. Chequée sus supuestos.

De las miles de veces que he tenido un error en R, no recuerdo que siquiera una que se deba a problemas del programa en sí, si no a torpezas mías. Es decir, nunca se considere perfecto y mantenga la mente abierta a la posibilidad de cometer errores de código.

Un consejo útil: genere errores a propósito. O sea, experimente. Eso es lo que hacen los profesionales, es decir, los que realmente saben.

Dos beneficios de experimentar son:

1. Aprender cómo funcionan las cosas (a menudo en forma razonablemente eficiente).
2. No desesperarse cuando las cosas salen mal.

### Reaccionando a los errores

Cuando obtenga un error o advertencia que no entiende, le puede resultar útil seguir estos pasos:

1. No entre en pánico.
2. Intente averiguar por qué ocurre.
3. Confirme que su sospecha es cierta.
4. Repita los pasos 1 a 3 tantas veces como sea necesario.

El arte de la depuración está en la habilidad para generar de buenas sospechas y confirmarlas. Y se obtiene con práctica.

A esta lista también puede agregarse una opción más:

5. Si realmente no tengo idea de para donde continuar, tal vez hacer una búsqueda de google me ayude.

Es decir, copiar el mensaje de error y pegarlo en una búsqueda de google puede ser muy útil y de hecho lo he practicado infinidad de veces. En este sentido, es bueno también saber seleccionar qué partes del error son las más informativas y que vale la pena poner en el buscador.

Más lecturas
------------

El documento llamado "[**The R Inferno**](http://www.burns-stat.com/pages/Tutor/R_inferno.pdf)" (en inglés por cierto) es sumamente didáctico. Se trata de una visita por los 9 círculos del "Infierno del R", muy al estilo de la Divina Comedia. En particular, el círculo 8 es un catálogo de errores posibles, y comineza con una breve introducción a la depuración en R.
